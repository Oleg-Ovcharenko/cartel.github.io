{"version":3,"sources":["components/Logo/Logo.jsx","components/Header/Hedaer.jsx","utils/icons.jsx","components/Footer/Footer.jsx","components/CurrencyTile/CurrencyTile.jsx","components/CurrencyBlock/CurrencyBlock.jsx","containers/PageHome/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Logo","React","memo","props","react_default","a","createElement","className","Header","aria-label","role","href","xmlns","viewBox","width","height","cx","cy","r","fill","d","Footer","CurrencyTile","_ref","purchase","currency","sale","CurrencyBlock","map","item","key","concat","PageHome","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMapModal","showMap","state","setState","objectSpread","loading","currencyEntry","inherits","createClass","value","_this2","fetch","then","response","json","feed","entry","_this$state","_this$state$currency","Fragment","onClick","style","minHeight","src","frameBorder","minWidth","dayjs","updated","format","Component","App","PageHome_PageHome","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcb64e2c.chunk.js","sourcesContent":["// LIBRARIES\nimport React from \"react\";\n\nexport const Logo = React.memo(props => {\n  return (\n    <div className=\"has-text-centered has-text-white-ter\">\n      <h1 className=\"is-uppercase logo-font is-size-1 lh-1\">cartel</h1>\n      <p className=\"logo-font is-size-6 lh-1\">in cash we trust</p>\n    </div>\n  );\n});\n","// LIBRARIES\nimport React from \"react\";\n// COMPONENTS\nimport { Logo } from \"../Logo\";\n// UTILS\nimport { iconTelegram } from \"../../utils/icons\";\n\nexport const Header = React.memo(props => {\n  return (\n    <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column is-10 is-offset-1 border-bottom p-l-0 p-r-0\">\n          <nav\n            className=\"navbar is-dark p-t-2 p-b-2\"\n            aria-label=\"main navigation\"\n            role=\"navigation\"\n          >\n            <div className=\"navbar-brand\">\n              <Logo />\n            </div>\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item flex-column\">\n                <span>\n                  <span className=\"icon m-r-1 align-middle\">\n                    <i className=\"fas fa-phone-alt\" />\n                  </span>\n                  +38 (099) 903-9003\n                </span>\n                <span>\n                  <span className=\"icon m-r-1 align-middle\">\n                    <i className=\"fas fa-phone-alt\" />\n                  </span>\n                  +38 (068) 903-9003\n                </span>\n              </div>\n              <div className=\"navbar-item p-r-0\">\n                <p className=\"control\">\n                  <a\n                    className=\"bd-tw-button button is-light\"\n                    href=\"https://t.me/cartel_obmen\"\n                  >\n                    <span className=\"icon m-r-1\">{iconTelegram()}</span>\n                    <span>Следи за курсом в Telegram</span>\n                  </a>\n                </p>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport const iconTelegram = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 48 48\"\n    width=\"24\"\n    height=\"24\"\n  >\n    <circle cx=\"24\" cy=\"24\" r=\"20\" fill=\"#29b6f6\" />\n    <path\n      d=\"M33.95 15l-3.746 19.126s-.161.874-1.245.874c-.576 0-.873-.274-.873-.274l-8.114-6.733-3.97-2.001-5.095-1.355S10 24.375 10 23.625c0-.625.933-.923.933-.923l21.316-8.468c-.001-.001.651-.235 1.126-.234.292 0 .625.125.625.5 0 .25-.05.5-.05.5z\"\n      fill=\"#fff\"\n    />\n    <path\n      d=\"M23 30.505l-3.426 3.374s-.149.115-.348.12a.494.494 0 0 1-.219-.043l.964-5.965L23 30.505z\"\n      fill=\"#b0bec5\"\n    />\n    <path\n      d=\"M29.897 18.196a.5.5 0 0 0-.701-.093L16 26s2.106 5.892 2.427 6.912c.322 1.021.58 1.045.58 1.045l.964-5.965 9.832-9.096a.499.499 0 0 0 .094-.7z\"\n      fill=\"#cfd8dc\"\n    />\n  </svg>\n);\n","// LIBRARIES\nimport React from \"react\";\n\nexport const Footer = React.memo(props => {\n  return (\n    <div className=\"container m-t-2\">\n      <div className=\"columns\">\n        <div className=\"column is-10 is-offset-1 border-top p-l-0 p-r-0 has-text-grey has-text-centered\">\n          <span className=\"lh-1 is-size-7 is-uppercase\">Cartel - </span>\n          <span className=\"lh-1 is-size-7\">in cash we trust</span>\n        </div>\n      </div>\n    </div>\n  );\n});\n","// LIBRARIES\nimport React from \"react\";\n\nexport const CurrencyTile = React.memo(({ purchase, currency, sale }) => {\n  return (\n    <div className=\"columns card is-size-4 has-background-grey-dark has-text-white-ter max-w-inherit m-b-3\">\n      <div className=\"column has-text-weight-bold\">{currency}</div>\n      <div className=\"column\">{purchase}</div>\n      <div className=\"column\">{sale}</div>\n    </div>\n  );\n});\n","// LIBRARIES\nimport React from \"react\";\n// COMPONENTS\nimport { CurrencyTile } from \"../CurrencyTile\";\n\nconst NAME_CURRENCY = \"gsx$_cn6ca\";\nconst NAME_PURCHASE = \"gsx$_cokwr\";\nconst NAME_SALE = \"gsx$_cpzh4\";\n\nexport const CurrencyBlock = React.memo(({ currency }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column is-10 is-offset-1\">\n          <div className=\"columns is-small has-background-grey-darker has-text-grey\">\n            <div className=\"column\">Переключатель</div>\n            <div className=\"column\">Покупка</div>\n            <div className=\"column\">Продажа</div>\n          </div>\n          {currency.map(item => (\n            <CurrencyTile\n              key={item[NAME_CURRENCY][\"$t\"]}\n              currency={`${item[NAME_CURRENCY][\"$t\"]}/UAH`}\n              purchase={item[NAME_PURCHASE][\"$t\"]}\n              sale={item[NAME_SALE][\"$t\"]}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n});\n","// LIBRARIES\nimport React from \"react\";\nimport dayjs from \"dayjs\";\n// COMPONENTS\nimport { Header, CurrencyBlock, Footer } from \"../../components\";\n\nexport class PageHome extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showMap: false,\n      currency: {\n        loading: true,\n        currencyEntry: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://spreadsheets.google.com/feeds/list/1Mw9tntVZMTjkArLVeytlIFkkUoixKfMuklPGUSlM90E/od6/public/values?alt=json\"\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState({\n          ...this.state,\n          currency: {\n            loading: false,\n            currencyEntry: json.feed.entry\n          }\n        });\n      });\n  }\n\n  // handlers\n\n  toggleMapModal = () => {\n    const { showMap } = this.state;\n    this.setState({\n      ...this.state,\n      showMap: !showMap\n    });\n  };\n\n  render() {\n    const {\n      showMap,\n      currency: { loading, currencyEntry }\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Header />\n        <div className={showMap ? \"is-active modal\" : \"modal\"}>\n          <div className=\"modal-background\" onClick={this.toggleMapModal} />\n          <div className=\"modal-content\" style={{ minHeight: \"500px\" }}>\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1281.9953961076137!2d36.225933458257636!3d50.011527794854295!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNTDCsDAwJzQxLjUiTiAzNsKwMTMnMzcuMyJF!5e0!3m2!1sru!2sua!4v1560088841427!5m2!1sru!2sua\"\n              frameBorder=\"0\"\n              style={{\n                minWidth: \"320px\",\n                minHeight: \"500px\",\n                width: \"100%\",\n                height: \"500px\"\n              }}\n            />\n          </div>\n          <button\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n            onClick={this.toggleMapModal}\n          />\n        </div>\n        <div className=\"container m-t-4 m-b-4\">\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1 p-l-0 p-r-0 has-text-grey-lighter\">\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <p className=\"m-b-2\">\n                    <span className=\"icon align-middle m-r-1\">\n                      <i className=\"fas fa-map-marker-alt\" />\n                    </span>\n                    г. Харьков, пр Науки 7\n                  </p>\n                  <p className=\"m-b-2\">\n                    <span className=\"icon align-middle m-r-1\">\n                      <i className=\"fas fa-subway\" />\n                    </span>\n                    метро Научная\n                  </p>\n                  <p>\n                    <span className=\"icon align-middle m-r-1\">\n                      <i className=\"far fa-clock\" />\n                    </span>\n                    Работаем 24/7\n                  </p>\n                  <a\n                    className=\"has-text-grey-light text-underline\"\n                    onClick={this.toggleMapModal}\n                  >\n                    <span className=\"icon align-middle m-r-1\">\n                      <i className=\"fas fa-map-marked\" />\n                    </span>\n                    Посмотреть на карте\n                  </a>\n                </div>\n                {loading ? null : (\n                  <div className=\"column has-text-right\">\n                    <span className=\"icon align-middle m-r-1\">\n                      <i className=\"fas fa-history\" />\n                    </span>\n                    Крус обновлен:&nbsp;\n                    {dayjs(`${currencyEntry[0].updated[\"$t\"]}`).format(\n                      \"YYYY.MM.DD HH:mm:ss\"\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {loading ? (\n          <div className=\"fa-2x has-text-centered m-t-5 m-b-5\">\n            <i className=\"fas fa-circle-notch fa-spin\" />\n          </div>\n        ) : (\n          <CurrencyBlock loading={loading} currency={currencyEntry} />\n        )}\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n","// LIBRARIES\nimport React from \"react\";\n// CONTAINERS\nimport { PageHome } from \"./containers/PageHome\";\n\nimport \"./styles/index.scss\";\n\nfunction App() {\n  return <PageHome />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}